#!/usr/bin/env bash

# Update user 'sail' UID if WWWUSER is set
if [ -n "$WWWUSER" ]; then
    usermod -u $WWWUSER sail
fi

# Create composer directory if it does not exist
if [ ! -d /.composer ]; then
    mkdir /.composer
fi

# Install npm and composer dependencies, run migrations, and set permissions
npm install --engine-strict
composer install --ignore-platform-reqs
php artisan migrate --force

# Ensure PHP version is 8.1 or higher
php_version=$(php -r 'echo PHP_VERSION;')
required_version="8.1"
if [[ "$(printf '%s\n' "$required_version" "$php_version" | sort -V | head -n1)" = "$required_version" ]]; then 
    echo "PHP version is $php_version, which is compatible."
else
    echo "Error: PHP version must be at least $required_version. Current version: $php_version."
    exit 1
fi

chmod -R ugo+rw /.composer

# Update the port in supervisord configuration if PORT is set
if [ -n "$PORT" ]; then
    sed -i -e "s/--port=80/--port=$PORT/g" /etc/supervisor/conf.d/supervisord.conf
fi

# Generate a new application key if it does not exist
if ! grep -q "APP_KEY=base64" .env; then
    php artisan key:generate
fi

# Execute command with gosu if arguments are provided, otherwise start supervisord
if [ $# -gt 0 ]; then
    exec gosu $WWWUSER "$@"
else
    /usr/bin/supervisord
fi